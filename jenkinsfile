pipeline{
    agent {label 'network'}
    environment {
    PATH = "${PATH}:${getterraformPath()}"
    }
    stages{
        stage('terraform init'){
            steps{
                sh "terraform init -force-copy"
            }
        }
        stage('s3 create bucket'){
        steps{
         script{
         creatbackendbucket('terraformjenkinsbucket')
         }
          }
        }
        
        stage('terraform yes plan'){
            steps{
                sh "terraform plan"
            }
        }
        
       stage('TF   Apply') {
             steps {
                sh 'terraform plan -out=./my-plan'
                input message: "Apply plan?"
                sh 'terraform ${actions} -auto-approve ./my-plan' 
        
            }
    }
    }
      
}
def getterraformPath(){
   def tfhome = tool name: 'terraform', type: 'terraform'
   return tfhome
}

def creatbackendbucket(bucketname){
sh returnStdout: true, script: "aws s3api  create-bucket --bucket $bucketname --region us-east-1"
}
